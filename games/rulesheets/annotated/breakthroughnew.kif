;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; Breakthrough
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; ROLE Relations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(role white)
(role black)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; INIT Relations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(init (cell 1 1 white))
(init (cell 2 1 white))
(init (cell 3 1 white))
(init (cell 4 1 white))
(init (cell 5 1 white))
(init (cell 6 1 white))
(init (cell 7 1 white))
(init (cell 8 1 white))
(init (cell 1 2 white))
(init (cell 2 2 white))
(init (cell 3 2 white))
(init (cell 4 2 white))
(init (cell 5 2 white))
(init (cell 6 2 white))
(init (cell 7 2 white))
(init (cell 8 2 white))

(init (cell 1 7 black))
(init (cell 2 7 black))
(init (cell 3 7 black))
(init (cell 4 7 black))
(init (cell 5 7 black))
(init (cell 6 7 black))
(init (cell 7 7 black))
(init (cell 8 7 black))
(init (cell 1 8 black))
(init (cell 2 8 black))
(init (cell 3 8 black))
(init (cell 4 8 black))
(init (cell 5 8 black))
(init (cell 6 8 black))
(init (cell 7 8 black))
(init (cell 8 8 black))
(init (control white))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; LEGAL Relations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(<= (legal white (move ?x ?y1 ?x ?y2))
    (true (control white))
    (true (cell ?x ?y1 white))
    (++ ?y1 ?y2)
    (not (true (cell ?x ?y2 white)))
    (not (true (cell ?x ?y2 black))))
(<= (legal white (move ?x1 ?y1 ?x2 ?y2))
    (true (control white))
    (true (cell ?x1 ?y1 white))
    (++ ?y1 ?y2)
    (++ ?x1 ?x2)
    (not (true (cell ?x2 ?y2 white))))
(<= (legal white (move ?x1 ?y1 ?x2 ?y2))
    (true (control white))
    (true (cell ?x1 ?y1 white))
    (++ ?y1 ?y2)
    (++ ?x2 ?x1)
    (not (true (cell ?x2 ?y2 white))))

(<= (legal black (move ?x ?y1 ?x ?y2))
    (true (control black))
    (true (cell ?x ?y1 black))
    (++ ?y2 ?y1)
    (not (true (cell ?x ?y2 white)))
    (not (true (cell ?x ?y2 black))))
(<= (legal black (move ?x1 ?y1 ?x2 ?y2))
    (true (control black))
    (true (cell ?x1 ?y1 black))
    (++ ?y2 ?y1)
    (++ ?x1 ?x2)
    (not (true (cell ?x2 ?y2 black))))
(<= (legal black (move ?x1 ?y1 ?x2 ?y2))
    (true (control black))
    (true (cell ?x1 ?y1 black))
    (++ ?y2 ?y1)
    (++ ?x2 ?x1)
    (not (true (cell ?x2 ?y2 black))))
    
(<= (legal white noop)
    (true (control black)))
(<= (legal white noop)
    (not (hasPiece white)))
    
(<= (legal black noop)
    (true (control white)))
(<= (legal black noop)
 	(not (hasPiece black)))
    
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; NEXT Relations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    
(<= (next (cell ?x2 ?y2 ?player))
    (does ?player (move ?x1 ?y1 ?x2 ?y2)))
(<= (next (cell ?x ?y ?state))
    (true (cell ?x ?y ?state))
    (not (cameFrom ?x ?y))
    (not (wentTo ?x ?y)))
    
(<= (next (control white))
    (true (control black)))
(<= (next (control black))
    (true (control white)))
    
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; TERMINAL Relations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(<= terminal 
    whiteWin)
(<= terminal
    blackWin)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; GOAL Relations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(<= (goal white 100)
    whiteWin)
(<= (goal white 0)
    (not whiteWin))
    
(<= (goal black 100)
    blackWin)
(<= (goal black 0)
    (not blackWin))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; View Definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(<= (cameFrom ?x1 ?y1)
	(does ?player (move ?x1 ?y1 ?x2 ?y2)))
(<= (wentTo ?x2 ?y2)
	(does ?player (move ?x1 ?y1 ?x2 ?y2)))

(<= whiteWin
    (index ?x)
    (true (cell ?x 8 white)))
(<= blackWin
    (index ?x)
    (true (cell ?x 1 black)))

(<= (hasPiece white)
    (true (cell ?xAny ?yAny white)))
(<= (hasPiece black)
    (true (cell ?xAny ?yAny black)))
    
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Static Relations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(index 1) (index 2) (index 3) (index 4) (index 5) (index 6) (index 7) (index 8)
(++ 1 2)  (++ 2 3)  (++ 3 4)  (++ 4 5)  (++ 5 6) (++ 6 7) (++ 7 8)
(base cell (x 1 2 3 4 5 6 7 8) (y 1 2 3 4 5 6 7 8) (player white black))
(base control (player white black))